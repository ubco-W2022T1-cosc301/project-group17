{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7659c7b4-d051-4744-bc83-670443bf6529",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def prop_and_drop(d1,d2):\n",
    "    d1_df = pd.read_csv('../data/raw/pwt100.csv',encoding = 'latin-1'),\n",
    "    d2_df = pd.read_csv('../data/raw/days-of-vacation-and-holidays.csv',encoding = 'latin-1'),\n",
    "    \n",
    "# removing unused variables \n",
    "\n",
    "    d1_df = d1_df.drop(['rgdpe','country','currency_unit','i_cig','i_xm','i_xr','i_outlier','i_irr','ccon','cda','cgdpe','cgdpo','cn','ck','ctfp','rconna','rdana','pl_con','pl_da','pl_gdpo','cor_exp','statcap','csh_c','csh_i','csh_g','csh_x','csh_m','csh_r','pl_c','pl_i','pl_g','pl_x','pl_m','pl_n','pl_k','cwtfp','rgdpna','rnna','rkna','rtfpna','rwtfpna','labsh','irr','delta','xr'],axis=1),\n",
    "    d2_df = d2_df.drop(['Entity'], axis = 1),\n",
    "    \n",
    "# renaming variables for merge   \n",
    "\n",
    "    d2_df.rename(columns={  \n",
    "                        'Code' :'countrycode',\n",
    "                        'Year' : 'year',\n",
    "                        'Days of vacation and holidays for full-time production workers in non-agricultural activities (Huberman & Minns 2007)' : 'Annual Days of Vacation'\n",
    "                       }),\n",
    "    d1_df = d1_df.rename(columns={  \n",
    "                        'rgdpo': 'Output GDP (USD millions)', \n",
    "                        'pop' : 'Population (millions)',\n",
    "                        'emp' : 'Number of Employees (millions)',\n",
    "                        'avh' : 'Average annual hours worked', \n",
    "                        'hc' : 'Human capital index',\n",
    "                       }),\n",
    "    \n",
    "# merge \n",
    "\n",
    "    d_cleaned = pd.merge(\n",
    "        d1_df,\n",
    "        d2_df,\n",
    "        how = 'left',\n",
    "        on = [\"countrycode\", \"year\"]\n",
    "    ),\n",
    "\n",
    "# selecting countries\n",
    "    \n",
    "    d_with_index = d_with_index.set_index(\"countrycode\"),\n",
    "    d_cleaned = d_with_index.drop(['ABW','AGO','AIA','ALB','ARE','ARG','ARM','ATG',\n",
    "       'AUT','AZE','BDI','BEN','BFA','BGD','BGR','BHR',\n",
    "       'BHS','BIH','BLR','BLZ','BMU','BOL','BRA','BRB','BRN',\n",
    "       'BTN','BWA', 'CAF', 'CHE', 'CHL', 'CHN', 'CIV','CMR',\n",
    "       'COD', 'COG', 'COL', 'COM', 'CPV', 'CRI', 'CUW', 'CYM','CYP',\n",
    "       'CZE', 'DJI', 'DMA','DOM', 'DZA', 'ECU', 'EGY','EST', 'ETH', 'FIN', 'FJI', 'GAB', 'GEO',\n",
    "       'GHA', 'GIN', 'GMB', 'GNB', 'GNQ', 'GRC', 'GRD', 'GTM','GUY',\n",
    "       'HKG', 'HND', 'HRV', 'HTI','HUN','IDN','IND','IRN',\n",
    "       'IRQ', 'ISL', 'ISR', 'JAM', 'JOR', 'JPN', 'KAZ', 'KEN',\n",
    "       'KGZ', 'KHM', 'KNA', 'KOR', 'KWT', 'LAO', 'LBN', 'LBR', 'LCA',\n",
    "       'LKA', 'LSO', 'LTU', 'LUX', 'LVA', 'MAC', 'MAR', 'MDA', 'MDG',\n",
    "       'MDV', 'MEX', 'MKD', 'MLI', 'MLT', 'MMR', 'MNE', 'MNG', 'MOZ',\n",
    "       'MRT', 'MSR', 'MUS', 'MWI', 'MYS', 'NAM', 'NER', 'NGA', 'NIC','NOR', 'NPL', 'NZL', 'OMN', 'PAK', 'PAN', 'PER', 'PHL',\n",
    "       'POL', 'PRT', 'PRY', 'PSE', 'QAT', 'ROU', 'RUS', 'RWA', 'SAU',\n",
    "       'SDN', 'SEN', 'SGP', 'SLE', 'SLV', 'SRB', 'STP', 'SUR', 'SVK',\n",
    "       'SVN', 'SWZ', 'SXM', 'SYC', 'SYR', 'TCA', 'TCD', 'TGO',\n",
    "       'THA', 'TJK', 'TKM', 'TTO', 'TUN', 'TUR', 'TWN', 'TZA', 'UGA',\n",
    "       'UKR', 'URY', 'UZB', 'VCT', 'VEN', 'VGB', 'VNM', 'YEM',\n",
    "       'ZAF', 'ZMB', 'ZWE',], axis = 0)\n",
    "    d1_cleaning_part_2 = d1_cleaning_part_2.reset_index(\"countrycode\"),\n",
    "    \n",
    "# adding labour productivity   \n",
    "    \n",
    "    d_cleaned['Labour Productivity'] = d_cleaned['Output GDP (USD millions)'] / (d_cleaned['Average annual hours worked'] * d_cleaned['Number of Employees (millions)'])\n",
    "    return d_cleaned\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
